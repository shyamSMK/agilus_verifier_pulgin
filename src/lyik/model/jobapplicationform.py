# generated by datamodel-codegen:
#   filename:  <stdin>
#   timestamp: 2025-06-11T10:27:54+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import Any, Dict, List, Optional, Union

from pydantic import ConfigDict, EmailStr, Field, BaseModel


class EMPLOYMENTTYPE(str, Enum):
    FT = 'FT'
    PT = 'PT'
    C = 'C'
    I = 'I'


class GENDER(str, Enum):
    M = 'M'
    F = 'F'
    O = 'O'


class RELOCATIONPREFERENCE(str, Enum):
    Y = 'Y'
    N = 'N'
    M = 'M'


class WORKMODE(str, Enum):
    O = 'O'
    R = 'R'
    H = 'H'


class RootAdditionalInformationInfoAdditionalInfoCard(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    cover_letter: Optional[Union[str, Dict[str, Any]]] = Field(
        None, description='Upload your cover letter', title='Cover Letter'
    )
    resume: Optional[Union[str, Dict[str, Any]]] = Field(
        None, description='Upload your resume', title='Resume'
    )
    portfolio_link: Optional[str] = Field(
        None,
        description='Link to your portfolio or personal website',
        title='Portfolio Link',
    )
    background_check_consent: Optional[bool] = Field(
        None,
        description='Consent for background check',
        title='Background Check Consent',
    )
    delcaration: Optional[bool] = Field(
        None, description='Declaration of information accuracy', title='Declaration'
    )
    signature: Optional[str] = Field(
        None, description='Enter your full name as a signature', title='Signature'
    )


class RootEducationalBackgroundInfoEduCard(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    highest_degree: Optional[str] = Field(
        None, description='Enter Highest Degree', title='Highest Degree'
    )
    institution_name: Optional[str] = Field(
        None, description='Enter Institution Name', title='Institution Name'
    )
    graduation_year: Optional[int] = Field(
        None, description='Enter Graduation Year', title='Graduation Year'
    )
    major: Optional[str] = Field(None, description='Enter Major', title='Major')
    gpa: Optional[float] = Field(None, description='Enter GPA', title='GPA')
    additional_certifications: Optional[str] = Field(
        None,
        description='Enter Additional Certifications',
        title='Additional Certifications',
    )


class RootPersonalInfoPerInfoCard(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    first_name: Optional[str] = Field(
        None, description='Enter First Name', title='First Name'
    )
    last_name: Optional[str] = Field(
        None, description='Enter Last Name', title='Last Name'
    )
    date_of_birth: Optional[date] = Field(
        None, description='DD/MM/YYYY', title='Date of Birth'
    )
    gender: Optional[GENDER] = Field(None, description='Select Option', title='Gender')
    nationality: Optional[str] = Field(
        None, description='Enter Nationality', title='Nationality'
    )
    current_address: Optional[str] = Field(
        None, description='Enter Current Address', title='Current Address'
    )
    contact_number: Optional[str] = Field(
        None, description='Enter Contact Number', title='Contact Number'
    )
    email: Optional[EmailStr] = Field(None, description='Enter Email', title='Email')
    linkedin_profile: Optional[str] = Field(
        None, description='Enter LinkedIn Profile', title='LinkedIn Profile'
    )


class RootPositionAndWorkPreferencesPoWrkPerCard(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    position_applied_for: Optional[str] = Field(
        None, description='Enter Position Applied For', title='Position Applied For'
    )
    department: Optional[str] = Field(
        None, description='Enter Department', title='Department'
    )
    expected_salary: Optional[str] = Field(
        None, description='Enter Expected Salary', title='Expected Salary'
    )
    employment_type: Optional[EMPLOYMENTTYPE] = Field(
        None, description='Select Option', title='Employment Type'
    )
    notice_period: Optional[str] = Field(
        None, description='Enter Notice Period', title='Notice Period'
    )
    relocation_preference: Optional[RELOCATIONPREFERENCE] = Field(
        None, description='Select Option', title='Relocation Preference'
    )
    prefered_work_mode: Optional[WORKMODE] = Field(
        None, description='Select Option', title='Preferred Work Mode'
    )


class RootReferencesInfoReferencesCard(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    reference_name: Optional[str] = Field(
        None, description='Enter Reference Name', title='Reference Name'
    )
    relationship: Optional[str] = Field(
        None, description='Enter Relationship', title='Relationship'
    )
    contact_number: Optional[str] = Field(
        None, description='Enter Contact Number', title='Contact Number'
    )
    email: Optional[EmailStr] = Field(None, description='Enter Email', title='Email')


class RootSkillsAndTechnicalKnowledgeInfoSkillsAndTechnicalKnowledgeCard(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    technical_skills: Optional[str] = Field(
        None, description='Enter Technical Skills', title='Technical Skills'
    )
    programming_languages: Optional[str] = Field(
        None, description='Enter Programming Languages', title='Programming Languages'
    )
    tools_and_technologies: Optional[str] = Field(
        None, description='Enter Tools and Technologies', title='Tools and Technologies'
    )
    certifications: Optional[str] = Field(
        None, description='Enter Certifications', title='Certifications'
    )


class RootWorkExperienceInfoWorkExperienceCardWorkexperiencegroupWorkExperienceCard(
    BaseModel
):
    model_config = ConfigDict(
        extra='allow',
    )
    company_name: Optional[str] = Field(
        None, description='Enter Company Name', title='Company Name'
    )
    job_title: Optional[str] = Field(
        None, description='Enter Job Title', title='Job Title'
    )
    location: Optional[str] = Field(
        None, description='Enter Location', title='Location'
    )
    start_date: Optional[date] = Field(
        None, description='DD/MM/YYYY', title='Start Date'
    )
    end_date: Optional[date] = Field(None, description='DD/MM/YYYY', title='End Date')
    responsibilities: Optional[str] = Field(
        None, description='Enter Responsibilities', title='Responsibilities'
    )
    achievements: Optional[str] = Field(
        None, description='Enter Achievements', title='Achievements'
    )


class RootAdditionalInformationInfo(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    additional_info_card: Optional[
        RootAdditionalInformationInfoAdditionalInfoCard
    ] = Field(
        None,
        description='Card for additional information in the job application form',
        title='Additional Information Card',
    )


class RootEducationalBackgroundInfo(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    edu_card: Optional[RootEducationalBackgroundInfoEduCard] = Field(
        None,
        description='Card for educational background in the job application form',
        title='Educational Background Card',
    )


class RootPersonalInfo(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    per_info_card: Optional[RootPersonalInfoPerInfoCard] = Field(
        None, title='Personal Information Card'
    )


class RootPositionAndWorkPreferences(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    po_wrk_per_card: Optional[RootPositionAndWorkPreferencesPoWrkPerCard] = Field(
        None, title='Position and Work Preferences Card'
    )


class RootReferencesInfo(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    references_card: Optional[RootReferencesInfoReferencesCard] = Field(
        None,
        description='Card for references in the job application form',
        title='References Card',
    )


class RootSkillsAndTechnicalKnowledgeInfo(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    skills_and_technical_knowledge_card: Optional[
        RootSkillsAndTechnicalKnowledgeInfoSkillsAndTechnicalKnowledgeCard
    ] = Field(
        None,
        description='Card for skills and technical knowledge in the job application form',
        title='Skills and Technical Knowledge Card',
    )


class RootWorkExperienceInfoWorkExperienceCardWorkexperiencegroup(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    work_experience_card: Optional[
        RootWorkExperienceInfoWorkExperienceCardWorkexperiencegroupWorkExperienceCard
    ] = Field(
        None,
        description='Card for work experience in the job application form',
        title='Work Experience Card',
    )


class FieldGrpRootWorkExperienceInfoWorkExperienceCard(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    workexperiencegroup: Optional[
        RootWorkExperienceInfoWorkExperienceCardWorkexperiencegroup
    ] = Field(
        None,
        description='Group for work experience in the job application form',
        title='Work Experience Group',
    )


class RootWorkExperienceInfo(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    work_experience_card: Optional[
        List[FieldGrpRootWorkExperienceInfoWorkExperienceCard]
    ] = Field(None, title='Work Experience')


class Jobapplicationform(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    personal_info: Optional[RootPersonalInfo] = Field(
        None,
        description='Section for personal information in the job application form',
        title='Personal Information',
    )
    position_and_work_preferences: Optional[RootPositionAndWorkPreferences] = Field(
        None,
        description='Section for position and work preferences in the job application form',
        title='Position and Work Preferences',
    )
    educational_background_info: Optional[RootEducationalBackgroundInfo] = Field(
        None,
        description='Section for educational background in the job application form',
        title='Educational Background',
    )
    work_experience_info: Optional[RootWorkExperienceInfo] = Field(
        None,
        description='Section for work experience in the job application form',
        title='Work Experience',
    )
    skills_and_technical_knowledge_info: Optional[
        RootSkillsAndTechnicalKnowledgeInfo
    ] = Field(
        None,
        description='Section for skills and technical knowledge in the job application form',
        title='Skills and Technical Knowledge',
    )
    references_info: Optional[RootReferencesInfo] = Field(
        None,
        description='Section for references in the job application form',
        title='References',
    )
    additional_information_info: Optional[RootAdditionalInformationInfo] = Field(
        None,
        description='Section for additional information in the job application form',
        title='Additional Information',
    )
