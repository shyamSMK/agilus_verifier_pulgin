# generated by datamodel-codegen:
#   filename:  <stdin>
#   timestamp: 2025-06-10T07:10:38+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import Any, Dict, Optional, Union

from pydantic import ConfigDict, EmailStr, Field, BaseModel


class GENDER(Enum):
    M = 'M'
    F = 'F'
    O = 'O'


class RootContactDetailsInfoContactDetails(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    communication_address: Optional[str] = Field(
        None,
        description='The communication address of the contact.',
        title='Communication Address',
    )
    city: Optional[str] = Field(
        None, description='The city of the contact.', title='City'
    )
    state: Optional[str] = Field(
        None, description='The state of the contact.', title='State'
    )
    country: Optional[str] = Field(
        None, description='The country of the contact.', title='Country'
    )


class RootEmailVerifierInfoEmail(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    contact_id: Optional[EmailStr] = Field(None, title='Email ID')
    otp: Optional[str] = Field(None, title='OTP')
    transaction_id: Optional[str] = Field(None, title='Transaction ID')


class RootMobileVerifierInfoMobile(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    contact_id: Optional[str] = Field(None, title='Mobile Number')
    otp: Optional[str] = Field(None, title='OTP')
    transaction_id: Optional[str] = Field(None, title='Transaction ID')


class RootUserDetailsInfoUserDetails(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    user_id: Optional[str] = Field(
        None, description='The unique identifier for the user.', title='User ID'
    )
    name: Optional[str] = Field(None, description='The name of the user.', title='Name')
    email: Optional[str] = Field(
        None, description='The email address of the user.', title='Email'
    )
    phone: Optional[str] = Field(
        None, description='The phone number of the user.', title='Phone'
    )
    gender: Optional[GENDER] = Field(
        None, description='Gender of the user.', title='Gender'
    )
    Date_of_Birth: Optional[date] = Field(
        None, description='The date of birth of the user.', title='Date of Birth'
    )
    Country: Optional[str] = Field(
        None, description='The country of the user.', title='Country'
    )
    Address: Optional[str] = Field(
        None, description='The address of the user.', title='Address'
    )
    State: Optional[str] = Field(
        None, description='The state of the user.', title='State'
    )
    Profile_Picture: Optional[Union[str, Dict[str, Any]]] = Field(
        None, description='The profile picture of the user.', title='Profile Picture'
    )


class RootContactDetailsInfo(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    contact_details: Optional[RootContactDetailsInfoContactDetails] = Field(
        None, title='Contact Details'
    )


class RootEmailVerifierInfo(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    email: Optional[RootEmailVerifierInfoEmail] = Field(
        None, description='Enter Email', title='Email'
    )


class RootMobileVerifierInfo(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    mobile: Optional[RootMobileVerifierInfoMobile] = Field(
        None, description='Enter Mobile', title='Mobile'
    )


class RootUserDetailsInfo(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    user_details: Optional[RootUserDetailsInfoUserDetails] = Field(
        None, title='User Details'
    )


class Sampleform(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    mobile_verifier_info: Optional[RootMobileVerifierInfo] = Field(
        None,
        description='This is a mobile verifier info pane.',
        title='Mobile Verifier',
    )
    email_verifier_info: Optional[RootEmailVerifierInfo] = Field(
        None, description='This is a email info pane.', title='Email Info'
    )
    contact_details_info: Optional[RootContactDetailsInfo] = Field(
        None, title='Info Pane Builder'
    )
    user_details_info: Optional[RootUserDetailsInfo] = Field(
        None, title='Info Pane Builder'
    )
